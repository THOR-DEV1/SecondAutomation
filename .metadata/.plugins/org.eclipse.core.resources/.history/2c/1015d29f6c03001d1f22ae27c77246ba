package base;

import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.Properties;

import org.apache.log4j.Logger;
import org.apache.log4j.PropertyConfigurator;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.edge.EdgeDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.testng.annotations.AfterSuite;
import org.testng.annotations.BeforeSuite;

import com.aventstack.extentreports.ExtentReports;
import com.aventstack.extentreports.reporter.ExtentSparkReporter;
import com.aventstack.extentreports.reporter.configuration.Theme;

import io.github.bonigarcia.wdm.WebDriverManager;
import utilities.ExcelReader;

public class Test_Base {
	
	public static WebDriver driver;
	public static Properties config = new Properties();
	public static Properties or = new Properties();
	public static FileInputStream fis;
	
	public static Logger log= Logger.getLogger("devpinoyLoggger");
	public static ExcelReader excel = new ExcelReader(
			System.getProperty("user.dir")+"\\src\\test\\resources\\excel\\TestData.xlsx");
	
	public ExtentReports extent = new ExtentReports();
	public ExtentSparkReporter spark = new ExtentSparkReporter("target/myreport.html");
	
	@BeforeSuite
	public void setup() throws IOException {
		extent.attachReporter(spark);
		spark.config().setTheme(Theme.DARK);
		spark.config().setDocumentTitle("MyReport");
		spark.config().setReportName("OrangeHRM Report");
		
		PropertyConfigurator.configure(
				"C:\\Users\\VamsiKandula\\eclipse-workspace\\PRJMyOrangeHRM\\src\\test\\resources\\properties\\log4j.properties");
		if (driver==null) {
			fis = new FileInputStream(
					System.getProperty("user.dir")+"\\src\\test\\resources\\properties\\Config.properties");
			config.load(fis);
			log.info("Config.prop. file is loaded......");
			
			fis = new FileInputStream(
					System.getProperty("user.dir")+"\\src\\test\\resources\\properties\\OR.properties");
			or.load(fis);
			log.info("OR.prop. file is loaded......");
			
			
			if (config.getProperty("browser").equals("chrome")) {
				WebDriverManager.chromedriver().setup();
				driver = new ChromeDriver();
				log.info("Chrome browser is launched.......");
			} else if (config.getProperty("browser").equals("firefox")) {
				WebDriverManager.firefoxdriver().setup();
				driver = new FirefoxDriver();
				log.info("Firefox browser is launched.......");
			} else {
				WebDriverManager.edgedriver().setup();
				driver = new EdgeDriver();
				log.info("Edge browser is launched.......");
			}
			
			// launch application
            driver.get(config.getProperty("testurl"));
            log.info("URL is loaded....... " + config.getProperty("testurl"));
            
						
		}
		
		
	}
	// validation methods? common method for validation
    public boolean isElementPresent(By by) {
        driver.findElement(by);
        return true;
    }

    public boolean isElementNotPresent(By by) {
        driver.findElement(by);
        return false;
    }
    
    @AfterSuite
    public void teardown() {
        if (driver != null) {
            driver.quit();
        }
        log.info("Test Execution is completed!!!");
        extent.flush();// save report
    }
	
}
